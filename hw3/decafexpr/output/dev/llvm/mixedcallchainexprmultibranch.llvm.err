; ModuleID = 'Test'

declare void @print_int(i32)

define void @test3(i1, i32) {
entry:
  %2 = load i32, i32* %x
  call void @print_int(i32 %2)
  %3 = load i1, i1* %a
  %zexttmp = zext i1 %3 to i32
  call void @print_int(i32 %zexttmp)
  ret void
  %x = alloca i32
  %a = alloca i1
}

define void @test2b(i32, i1) {
entry:
  %2 = load i32, i32* %x
  call void @print_int(i32 %2)
  %3 = load i1, i1* %a
  %zexttmp = zext i1 %3 to i32
  call void @print_int(i32 %zexttmp)
  %4 = load i1, i1* %a
  %5 = load i32, i32* %x
  call void @test3(i1 %4, i32 %5)
  ret void
  %x = alloca i32
  %a = alloca i1
}

define void @test2a(i32, i1) {
entry:
  %2 = load i32, i32* %x
  call void @print_int(i32 %2)
  %3 = load i1, i1* %a
  %zexttmp = zext i1 %3 to i32
  call void @print_int(i32 %zexttmp)
  %4 = load i1, i1* %a
  %unottmp = xor i1 %4, true
  %5 = load i32, i32* %x
  %addtmp = add i32 %5, 1
  call void @test3(i1 %unottmp, i32 %addtmp)
  ret void
  %a = alloca i1
  %x = alloca i32
}

define void @test1(i1, i32) {
entry:
  %2 = load i32, i32* %x
  call void @print_int(i32 %2)
  %3 = load i1, i1* %a
  %zexttmp = zext i1 %3 to i32
  call void @print_int(i32 %zexttmp)
  %4 = load i32, i32* %x
  %addtmp = add i32 %4, 1
  %5 = load i1, i1* %a
  %unottmp = xor i1 %5, true
  call void @test2a(i32 %addtmp, i1 %unottmp)
  %6 = load i32, i32* %x
  %addtmp1 = add i32 %6, 1
  %7 = load i1, i1* %a
  %unottmp2 = xor i1 %7, true
  call void @test2b(i32 %addtmp1, i1 %unottmp2)
  ret void
}

define i32 @main() {
entry:
  call void @test1(i1 true, i32 1)
  ret i32 0
}
